@startuml
package eopf.product {
    class EOProduct {
        ' EOProduct class shall implement Python magic/dunder methods necessary to emulate MutableMapping[Hashable, Group] type. The (Hashable) 'key' being the name of the group.
        __ Methods __
        __init__(self, name[, storage]): Constructor
        __getattr__(self, key): access to the given key as a member field
        __str__(self) -> str: string readable representation
        __repr__(self) -> str: unique identifying string
        _repr_html_(self) -> html representation for jupyter notebook
        _ipython_key_completions_(self) -> Iterable[str]: keys for completion by ipython
        _get_group(self, group_name) -> EOGroup: find an eogroup in memory and/or from a store
        is_valid() : boolean ( check if the EOProduct follows the harmonized structure )
        validate(): check if the product follows the harmonized structure, raise an exception if
            is not the case
        add_group(self, name): create a subgroup with the given name
        open(self[, store_or_path_url, mode, **kwargs]): open the store with the given parameters
        load(self) -> load all the product in memory
        write(self) -> write the product on the store
        ' REQ-41 add selection rules ( bands , polarization, depending of the sensor)

        __ Property __
        name: str

        __ Field Members __
        _name : str
        _store : EOProductStore
        _groups: dict[str, EOGroup],  memory storage
    }
    package store {
        abstract EOProductStore
    }
    EOProduct "1" o-- "1..*" EOGroup
}

EOProduct --|> MutableMapping
EOProduct "1" *-- "1" EOProductStore
@enduml
