stages:
  - test
  - build
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

#############################################
############ PIP SECTION #################
#############################################

linter:
  stage: test
  image: python:3.9
  before_script:
    - pip install .[linter]
  script:
  - python -m flake8 eopf tests

formater:
  stage: test
  image: python:3.9
  before_script:
    - pip install .[formatter]
  script:
  - python -m black --check .
  - python -m isort eopf tests --check --diff

typing:
  stage: test
  image: python:3.9
  before_script:
    - pip install .[typing]
  script:
  - python -m mypy eopf

tests:
  stage: test
  image: python:3.9
  before_script:
    - pip install .[tests]
  script:
  - python -m pytest --cov=eopf --cov-report=term-missing --cov-fail-under=70 -m unit

security:
  stage: test
  image: python:3.9
  before_script:
    - pip install .[security]
  script:
  - python -m bandit -c bandit.yml eopf

deps-sec:
  stage: test
  image: python:3.9
  before_script:
    - pip install .[security]
  script:
  - safety check
  allow_failure: true

docs-cov:
  stage: test
  image: python:3.9
  before_script:
    - pip install .[doc-cov]
  script:
  - docstr-coverage eopf -F 20
  allow_failure: true

complexity:
  stage: test
  image: python:3.9
  before_script:
    - pip install .[complexity]
  script:
  - python -m xenon --max-average B --max-modules C --max-absolute D eopf
  allow_failure: true


#############################################
############# BUILD SECTION #################
#############################################
build-package:
  stage: build
  image: python:3.9
  script:
    - pip wheel -w dist --no-deps .
  artifacts:
    paths:
    - dist/

#############################################
############# DEPLOY SECTION #################
#############################################
deploy-package:
  stage: deploy
  image: python:3.9
  dependencies:
  - build-package
  script:
    - pip install twine
    - >-
      TWINE_PASSWORD=${CI_REGISTRY_PASSWORD}
      TWINE_USERNAME=${CI_REGISTRY_USER}
      python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  rules:
    - if: $CI_COMMIT_TAG

pages:
  stage: deploy
  image: python:3.9
  script:
  - pip install .[doc]
  - cd docs
  - make html
  # GitLab Pages expects the documentation to be in the 'public'
  # directory of the repository's root.
  - mv build/html ../public
  artifacts:
    paths:
    - public
  rules:
    - if: $CI_COMMIT_TAG
