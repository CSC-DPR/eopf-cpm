name: eopf-cpm ci
on: [pull_request]

jobs:
  pipenv:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ['3.9']
    name: 'pipenv environment'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipenv
        if: ${{ matrix.environment == 'pipenv'}}
        run: python -m pip install -U pipenv

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile') }}

      - name: install deps
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install --deploy --dev

      - name: Run tests
        run: pipenv run pytest
          --cov=eopf
          --cov-report=term-missing
          --cov-fail-under=70

      - name: linter
        run: pipenv run flake8 eopf tests

      - name: isort
        run: pipenv run isort eopf tests --check --diff

      - name: formatter
        run: pipenv run black --check

      - name: security issues
        run: pipenv run bandit -c bandit.yml

  conda:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ['3.9']
    name: 'conda environment'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          echo "CONDA_ENV_FILE=environment.yml" >> $GITHUB_ENV
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Cache conda
        uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-py${{ matrix.python-version }}-${{
            hashFiles('environment.yaml') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          channel-priority: strict
          mamba-version: "*"
          activate-environment: eopf-dev
          auto-update-conda: false
          python-version: ${{ matrix.python-version }}
          use-only-tar-bz2: true

      - name: Install conda dependencies
        run: |
          mamba env update -f $CONDA_ENV_FILE

      - name: Install eopf-cpm
        run: |
          python -m pip install --no-deps -e .

      - name: Run tests
        run: python -m pytest
          --cov=eopf
          --cov-report=term-missing
          --cov-fail-under=70

      - name: linter
        run: python -m flake8 eopf tests

      - name: isort
        run: python -m isort eopf tests --check --diff

      - name: formatter
        run: python -m black --check

      - name: security issues
        run: python -m bandit -c bandit.yml
