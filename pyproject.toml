[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "eopf"
authors = []
dynamic = ["version", "description"]
readme = "README.rst"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Private :: Do Not Upload",
]
requires-python = ">=3.9"
dependencies = [
    "dask ==2022.5.2",
    "distributed ==2022.5.2",
    "xarray ==0.21.1",
    "netcdf4 ==1.5.7",
    "numpy ==1.22.3",
    "zarr ==2.11.1",
    "fsspec ==2021.11.1",
    "lxml==4.7.1",
    "ecmwflibs ==0.4.6",
    "cfgrib ==0.9.10.1",
    "rioxarray ==0.10.2",
    "rasterio==1.2.10",
    "kerchunk ==0.0.6",
    "h5py ==3.6.0",
    "s3fs ==2021.11.1",
    "boto3 ==1.19.8",
    "bokeh ==2.4.3",
    "click ==8.1.3",
    "fastapi ==0.77.1",
    "uvicorn[standard] ==0.17.6",
    "requests ==2.27.1",
    "aiokafka ==0.7.2",
    "pytz ==2021.03",
    "Shapely ==1.8.2",
    "importlib-metadata ==4.12.0",
    "rio-cogeo == 3.3.0",
]
license = {file = "LICENSE"}

[project.optional-dependencies]
cluster-plugin = [
    "dask-kubernetes",
    "dask-jobqueue",
    "dask-gateway",
    "dask-yarn"
]
tests = [
    "pytest >=6.2.5",
    "pytest-cov >=3.0.0",
    "hypothesis >=6.29.0",
    "pytest-lazy-fixture >=0.6.3",
    "pytest-error-for-skips >=2.0.2",
    "eopf[cluster-plugin]",
]
linter = ["flake8 >=4.0.1"]
typing = [
    "mypy >=0.931", "types-python-dateutil >=2.8.10",
    "types-pytz >=2021.3.6",
    "types-setuptools >=57.4.14",
    "eopf[cluster-plugin]",
]
formatter = ["black >=21.11b1", "isort >=5.10.1"]
security = ["bandit >=1.7.1", "safety >=1.10.3"]
notebook = [
    "jupyter >=1.0.0", "Jinja2 >=3.0.3",
    "matplotlib >=3.5.1"
]
doc = [
    "jupyter-sphinx >=0.3.2", "sphinx-book-theme >=0.2.0",
    "sphinx-multiversion >=0.2.4",
    "eopf[notebook]",
    "sphinxcontrib-apidoc ==0.3.0",
    "GitPython >=3.1",
    "nbsphinx >= 0.8.9",
    "eopf[cluster-plugin]",
]
complexity = ["xenon >=0.8.0"]
doc-cov = ["docstr-coverage >=2.1.1"]
dev = [
    "pre-commit >=2.16.0",
    "eopf[complexity,tests,doc-cov]",
    "eopf[linter,typing,formatter]",
    "eopf[security,doc,notebook]",
    "eopf[cluster-plugin]",
]

[project.scripts]
eopf = "eopf.cli:eopf_cli"

[project.entry-points."eopf.cli"]
trigger = "eopf.triggering.cli:EOCLITrigger"
web-server = "eopf.triggering.web:EOWebTrigger"
kafka-consumer = "eopf.triggering.event:EOEventTrigger"

[project.entry-points."eopf.accessors"]
default = "eopf.product.store.zarr:EOZarrStore"
zarr = "eopf.product.store.zarr:EOZarrStore"
safe = "eopf.product.store.safe:EOSafeStore"
cogs = "eopf.product.store.cog:EOCogStore"
netcdf = "eopf.product.store.netcdf:EONetCDFStore"
netcdf-netCDF4py = "eopf.product.store.netcdf:EONetCDFStoreNCpy"
xmlmetadata = "eopf.product.store.xml_accessors:XMLManifestAccessor"
xmlangles = "eopf.product.store.xml_accessors:XMLAnglesAccessor"
xmltp = "eopf.product.store.xml_accessors:XMLTPAccessor"
grib = "eopf.product.store.grib:EOGribAccessor"
jp2 = "eopf.product.store.rasterio:EORasterIOAccessor"
attribute_element_to_float_variable = "eopf.product.store.wrappers:FromAttributesToVariableAccessor"
attribute_element_to_flag_variable = "eopf.product.store.wrappers:FromAttributesToFlagValueAccessor"
L0packetlist = "eopf.product.store.memmap_accessors:MemMapAccessor"
L0annotationlist = "eopf.product.store.memmap_accessors:FixedMemMapAccessor"
filename_to_subswath = "eopf.product.store.filename_to_variable:FilenameToVariableAccessor"

[project.entry-points."eopf.store.mapping_folder"]
default = "eopf.product.store.mapping"

[tool.isort]
profile = "black"

[tool.black]
line-length = 120
target-version = ['py39']

[tool.pytest.ini_options]
markers = [
    "integration",
    "unit",
    "need_files",
]
